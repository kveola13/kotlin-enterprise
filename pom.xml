<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>okve</groupId>
    <artifactId>kotlin-enterprise</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>user</module>
        <module>auth</module>
        <module>logs</module>
        <module>trip</module>
        <module>gateway</module>
        <module>eureka</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <fs>${file.separator}</fs>
        <version.java>1.8</version.java>
        <version.jacoco>0.7.9</version.jacoco>
        <version.h2>1.4.194</version.h2>
        <version.postgres>42.1.4</version.postgres>
        <version.resteasy>3.1.3.Final</version.resteasy>
        <!--<version.testcontainers>1.6.0</version.testcontainers>-->
        <version.testcontainers>1.9.1</version.testcontainers>
        <version.selenium>3.9.0</version.selenium>
        <kotlin.version>1.3.21</kotlin.version>
    </properties>


    <!--
    Here we define all third-party dependencies we need in the sub-modules, so that we
    do not have to copy&paste each time the <version> and <scope> tags

    To check for new versions, use:

    mvn versions:display-dependency-updates
    -->
    <dependencyManagement>
        <dependencies>

            <!-- Our own modules -->
            <dependency>
                <groupId>org.tsdes.misc</groupId>
                <artifactId>test-utils</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Database -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgres}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>3.10.2</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>5.0.7</version>
            </dependency>


            <!-- test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <!-- JUnit 5 is out, but still not in a stable / widely supported state -->
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- to test REST APIs -->
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>3.1.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- to mock web services -->
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>2.2.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- used to control a browser for system testing -->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${version.selenium}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- used to control a browser for system testing -->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>${version.selenium}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- used to control a browser for system testing -->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-chrome-driver</artifactId>
                <version>${version.selenium}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- used to control a browser for system testing -->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-remote-driver</artifactId>
                <version>${version.selenium}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- used to control a browser for system testing -->
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-support</artifactId>
                <version>${version.selenium}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- for code coverage -->
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.core</artifactId>
                <version>${version.jacoco}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- To use Docker from tests -->
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${version.testcontainers}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>selenium</artifactId>
                <version>${version.testcontainers}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.seleniumhq.selenium</groupId>
                        <artifactId>selenium-remote-driver</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- For handling waiting of asynchronous events -->
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>3.0.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- To mock/stub objects -->
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.15.0</version>
                <scope>test</scope>
            </dependency>


            <!-- Misc -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.7.25</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>23.6-jre</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>2.8.9</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>2.8.9</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.1</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${version.resteasy}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jackson-provider</artifactId>
                <version>${version.resteasy}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${version.resteasy}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>5.1</version>
            </dependency>


            <!-- for caching -->
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>2.10.5</version>
            </dependency>
            <!-- Looks like we cannot use new version, as HttpClient still rely on 2.x-->
            <!--<dependency>-->
            <!--<groupId>org.ehcache</groupId>-->
            <!--<artifactId>ehcache</artifactId>-->
            <!--<version>3.5.2</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient-cache</artifactId>
                <version>4.5.6</version>
            </dependency>



        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
        Profiles enable you to have custom configurations only in some special occasions.

        You can use "-P <id>" to activate a profile with the given <id>, eg

        mvn verify -P <id>

        To see all available profiles in a project (which could be declared in sub-modules),
        user:

        mvn help:all-profiles | grep "Profile Id"
    -->
    <profiles>
    </profiles>


    <build>

        <!--
            like dependencyManagement, this only defines which (and how) plugins to use.
            to actually activate them, they need to be directly under <plugins> (without
            the need to reset all their configurations).
            Note: some plugins are default in Maven, like the compiler.
            To see what actually executed, you can look at the logs.
        -->
        <pluginManagement>
            <plugins>

                <!-- Built-in plugin used to compile Java code -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                    <inherited>true</inherited>
                    <configuration>
                        <source>${version.java}</source>
                        <target>${version.java}</target>
                    </configuration>
                </plugin>

                <!-- Built-in plugin used to execute unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <rerunFailingTestsCount>3</rerunFailingTestsCount>
                        <argLine> -Xms1024m -Xmx2048m</argLine>
                    </configuration>
                </plugin>

                <!-- this is needed to run integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <rerunFailingTestsCount>3</rerunFailingTestsCount>
                        <argLine> -Xms1024m -Xmx4096m</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <!-- Need to create self-executable uber/fat jars for SpringBoot -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${version.springboot}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!--
                    Avoid failing War generation if web.xml is missing, as we ll not
                    use it in some example modules
                -->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>

                <!-- For running ANT tasks, like renaming files/folders -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <!--
                    Used to calculate code-coverage of the tests
                -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco}</version>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-prepare-agent-integration</id>
                            <phase>package</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report-integration</id>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- For cloud deployment on Heroku -->
                <plugin>
                    <groupId>com.heroku.sdk</groupId>
                    <artifactId>heroku-maven-plugin</artifactId>
                    <version>2.0.2</version>
                </plugin>
                <!-- For scanning dependencies for known no.westerdals.gateway.security issues-->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>3.1.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>